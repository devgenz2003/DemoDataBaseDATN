// <auto-generated />
using System;
using Assgiment_CSharp5._1_DataProcessing.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assgiment_CSharp5.Migrations
{
    [DbContext(typeof(Assgiment_Csharp5_Context))]
    [Migration("20230517105325_demo1")]
    partial class demo1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AddressClient", b =>
                {
                    b.Property<Guid>("AddresseIDAddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientIDClient")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AddresseIDAddress", "ClientIDClient");

                    b.HasIndex("ClientIDClient");

                    b.ToTable("AddressClient");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Address", b =>
                {
                    b.Property<Guid>("IDAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.HasKey("IDAddress");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Bill", b =>
                {
                    b.Property<Guid>("IDBill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientIDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeBill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDAddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentsIDPayments")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IDBill");

                    b.HasIndex("ClientIDClient");

                    b.HasIndex("IDAddress");

                    b.HasIndex("PaymentsIDPayments");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.BillDetail", b =>
                {
                    b.Property<Guid>("IDBillDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IDBillDetail");

                    b.ToTable("BillDetail");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Category", b =>
                {
                    b.Property<Guid>("IDCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDCombo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDCategory");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.CategoryDetail", b =>
                {
                    b.Property<Guid>("IDCategoryDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDCategoryDetail");

                    b.ToTable("CategoryDetail");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Client", b =>
                {
                    b.Property<Guid>("IDClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Express_DeliveryIDExpress_Delivery")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDAddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDCart")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDFavorites_List")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDImages")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDMembership_Card")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDMembership_Level")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDReviews")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identity_Card")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Membership_LevelIDMembership_Level")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDClient");

                    b.HasIndex("Express_DeliveryIDExpress_Delivery");

                    b.HasIndex("Membership_LevelIDMembership_Level");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Color_Product", b =>
                {
                    b.Property<Guid>("IDColor_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDColor_Product");

                    b.ToTable("Color_Product");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Combo", b =>
                {
                    b.Property<Guid>("IDCombo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryIDCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComboName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDCoupons")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrdelDetailIDOrdeltDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDCombo");

                    b.HasIndex("CategoryIDCategory");

                    b.HasIndex("OrdelDetailIDOrdeltDetail");

                    b.ToTable("Combo");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.ComboDetail", b =>
                {
                    b.Property<Guid>("IDComboDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComboIDCombo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDCombo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDComboDetail");

                    b.HasIndex("ComboIDCombo");

                    b.ToTable("ComboDetail");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Coupons", b =>
                {
                    b.Property<Guid>("IDCoupons")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Coupon_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discount_Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discount_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiration_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDCombo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDMembership_Card")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Maximum_Discount_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MembershipCardIDMembership_Card")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Minimum_Spend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.HasKey("IDCoupons");

                    b.HasIndex("MembershipCardIDMembership_Card");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Coupons_Partner", b =>
                {
                    b.Property<Guid>("IDCoupons_Partner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KOD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDCoupons_Partner");

                    b.ToTable("Coupons_Partner");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Express_Delivery", b =>
                {
                    b.Property<Guid>("IDExpress_Delivery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Actual_Delivery_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BillIDBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Delivery_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Delivery_Status")
                        .HasColumnType("int");

                    b.Property<Guid>("IDBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Payment_Status")
                        .HasColumnType("int");

                    b.Property<string>("Receiver_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Receiver_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Shipping_Cost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IDExpress_Delivery");

                    b.HasIndex("BillIDBill");

                    b.ToTable("Express_Delivery");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Favorites_List", b =>
                {
                    b.Property<Guid>("IDFavorites_List")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDFavorites_List");

                    b.ToTable("Favorites_List");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Images", b =>
                {
                    b.Property<Guid>("IDImages")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDPersonnel")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.HasKey("IDImages");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Material_Product", b =>
                {
                    b.Property<Guid>("IDMaterial_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaterialDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDMaterial_Product");

                    b.ToTable("Material_Product");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Membership_Card", b =>
                {
                    b.Property<Guid>("IDMembership_Card")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClientIDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDMembership_Level")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MembershipLevelIDMembership_Level")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDMembership_Card");

                    b.HasIndex("ClientIDClient");

                    b.HasIndex("MembershipLevelIDMembership_Level");

                    b.ToTable("Membership_Card");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Membership_Level", b =>
                {
                    b.Property<Guid>("IDMembership_Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDMembership_Level");

                    b.ToTable("Membership_Level");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Ordel", b =>
                {
                    b.Property<Guid>("IDOrdel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientIDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IDOrdel");

                    b.HasIndex("ClientIDClient");

                    b.ToTable("Ordel");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.OrdelDetail", b =>
                {
                    b.Property<Guid>("IDOrdeltDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDCombo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrdelIDOrdel")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IDOrdeltDetail");

                    b.HasIndex("OrdelIDOrdel");

                    b.ToTable("OrdelDetail");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Partner", b =>
                {
                    b.Property<Guid>("IDPartner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDCoupons_Partner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PartnerDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPartner");

                    b.ToTable("Partner");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Payments", b =>
                {
                    b.Property<Guid>("IDPayments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDPartner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PartnerIDPartner")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDPayments");

                    b.HasIndex("PartnerIDPartner");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Personnel", b =>
                {
                    b.Property<Guid>("IDPersonnel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDImages")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDRole")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleIDRole")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDPersonnel");

                    b.HasIndex("RoleIDRole");

                    b.ToTable("Personnel");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Producer_Product", b =>
                {
                    b.Property<Guid>("IDProducer_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Producer_ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer_ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer_ProductStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer_ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDProducer_Product");

                    b.ToTable("Producer_Product");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Product", b =>
                {
                    b.Property<Guid>("IDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("IDBillDetails")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDCategoryDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDColor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDComboDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDCoupons")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDImages")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDMaterial_Product")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDOrdelDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDProducer_Product")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDSize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceCeiling")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReviewsIDReviews")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDProduct");

                    b.HasIndex("ReviewsIDReviews");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Reviews", b =>
                {
                    b.Property<Guid>("IDReviews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.HasKey("IDReviews");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Role", b =>
                {
                    b.Property<Guid>("IDRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDPersonnel")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Size_Product", b =>
                {
                    b.Property<Guid>("IDSize_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDSize_Product");

                    b.ToTable("Size_Product");
                });

            modelBuilder.Entity("BillDetailProduct", b =>
                {
                    b.Property<Guid>("BillDetailsIDBillDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsIDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BillDetailsIDBillDetail", "ProductsIDProduct");

                    b.HasIndex("ProductsIDProduct");

                    b.ToTable("BillDetailProduct");
                });

            modelBuilder.Entity("CategoryDetailProduct", b =>
                {
                    b.Property<Guid>("CategoryDetailIDCategoryDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsIDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryDetailIDCategoryDetail", "ProductsIDProduct");

                    b.HasIndex("ProductsIDProduct");

                    b.ToTable("CategoryDetailProduct");
                });

            modelBuilder.Entity("ClientFavorites_List", b =>
                {
                    b.Property<Guid>("ClientsIDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FavoritesIDFavorites_List")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClientsIDClient", "FavoritesIDFavorites_List");

                    b.HasIndex("FavoritesIDFavorites_List");

                    b.ToTable("ClientFavorites_List");
                });

            modelBuilder.Entity("ClientImages", b =>
                {
                    b.Property<Guid>("ClientIDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ImagesIDImages")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClientIDClient", "ImagesIDImages");

                    b.HasIndex("ImagesIDImages");

                    b.ToTable("ClientImages");
                });

            modelBuilder.Entity("ClientReviews", b =>
                {
                    b.Property<Guid>("ClientIDClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewsIDReviews")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClientIDClient", "ReviewsIDReviews");

                    b.HasIndex("ReviewsIDReviews");

                    b.ToTable("ClientReviews");
                });

            modelBuilder.Entity("Color_ProductProduct", b =>
                {
                    b.Property<Guid>("Color_ProductIDColor_Product")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductIDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Color_ProductIDColor_Product", "ProductIDProduct");

                    b.HasIndex("ProductIDProduct");

                    b.ToTable("Color_ProductProduct");
                });

            modelBuilder.Entity("ComboCoupons", b =>
                {
                    b.Property<Guid>("CombosIDCombo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CouponsIDCoupons")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CombosIDCombo", "CouponsIDCoupons");

                    b.HasIndex("CouponsIDCoupons");

                    b.ToTable("ComboCoupons");
                });

            modelBuilder.Entity("ComboDetailProduct", b =>
                {
                    b.Property<Guid>("ComboDetailIDComboDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductIDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComboDetailIDComboDetail", "ProductIDProduct");

                    b.HasIndex("ProductIDProduct");

                    b.ToTable("ComboDetailProduct");
                });

            modelBuilder.Entity("CouponsProduct", b =>
                {
                    b.Property<Guid>("CouponsIDCoupons")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsIDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CouponsIDCoupons", "ProductsIDProduct");

                    b.HasIndex("ProductsIDProduct");

                    b.ToTable("CouponsProduct");
                });

            modelBuilder.Entity("ImagesPersonnel", b =>
                {
                    b.Property<Guid>("ImagesIDImages")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonnelIDPersonnel")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImagesIDImages", "PersonnelIDPersonnel");

                    b.HasIndex("PersonnelIDPersonnel");

                    b.ToTable("ImagesPersonnel");
                });

            modelBuilder.Entity("ImagesProduct", b =>
                {
                    b.Property<Guid>("ImagesIDImages")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsIDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImagesIDImages", "ProductsIDProduct");

                    b.HasIndex("ProductsIDProduct");

                    b.ToTable("ImagesProduct");
                });

            modelBuilder.Entity("Material_ProductProduct", b =>
                {
                    b.Property<Guid>("Material_ProductIDMaterial_Product")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsIDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Material_ProductIDMaterial_Product", "ProductsIDProduct");

                    b.HasIndex("ProductsIDProduct");

                    b.ToTable("Material_ProductProduct");
                });

            modelBuilder.Entity("OrdelDetailProduct", b =>
                {
                    b.Property<Guid>("OrdelDetailIDOrdeltDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsIDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrdelDetailIDOrdeltDetail", "ProductsIDProduct");

                    b.HasIndex("ProductsIDProduct");

                    b.ToTable("OrdelDetailProduct");
                });

            modelBuilder.Entity("Producer_ProductProduct", b =>
                {
                    b.Property<Guid>("Producer_ProductIDProducer_Product")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsIDProduct")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Producer_ProductIDProducer_Product", "ProductsIDProduct");

                    b.HasIndex("ProductsIDProduct");

                    b.ToTable("Producer_ProductProduct");
                });

            modelBuilder.Entity("AddressClient", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Address", null)
                        .WithMany()
                        .HasForeignKey("AddresseIDAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientIDClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Bill", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Client", "Client")
                        .WithMany("Bill")
                        .HasForeignKey("ClientIDClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Address", "Address")
                        .WithMany("Bill")
                        .HasForeignKey("IDAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Payments", null)
                        .WithMany("Bills")
                        .HasForeignKey("PaymentsIDPayments");

                    b.Navigation("Address");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.BillDetail", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Bill", "Bill")
                        .WithMany("BillDetail")
                        .HasForeignKey("IDBillDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.CategoryDetail", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Category", "Categories")
                        .WithMany("CategoryDetail")
                        .HasForeignKey("IDCategoryDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Client", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Express_Delivery", null)
                        .WithMany("Client")
                        .HasForeignKey("Express_DeliveryIDExpress_Delivery");

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Membership_Level", "Membership_Level")
                        .WithMany()
                        .HasForeignKey("Membership_LevelIDMembership_Level")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membership_Level");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Combo", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Category", null)
                        .WithMany("Combos")
                        .HasForeignKey("CategoryIDCategory");

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.OrdelDetail", null)
                        .WithMany("Combos")
                        .HasForeignKey("OrdelDetailIDOrdeltDetail");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.ComboDetail", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Combo", "Combo")
                        .WithMany("ComboDetail")
                        .HasForeignKey("ComboIDCombo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Coupons", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Membership_Card", "MembershipCard")
                        .WithMany("Coupons")
                        .HasForeignKey("MembershipCardIDMembership_Card")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembershipCard");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Express_Delivery", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillIDBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Membership_Card", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Client", null)
                        .WithMany("Membership_Card")
                        .HasForeignKey("ClientIDClient");

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Membership_Level", "MembershipLevel")
                        .WithMany("MembershipCards")
                        .HasForeignKey("MembershipLevelIDMembership_Level")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembershipLevel");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Ordel", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Client", "Client")
                        .WithMany("Cart")
                        .HasForeignKey("ClientIDClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.OrdelDetail", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Ordel", "Ordel")
                        .WithMany("OrdelDetails")
                        .HasForeignKey("OrdelIDOrdel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordel");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Partner", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Coupons_Partner", "Coupons_Partner")
                        .WithOne("Partner")
                        .HasForeignKey("Assgiment_CSharp5._1_DataProcessing.Models.Partner", "IDPartner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupons_Partner");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Payments", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerIDPartner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Personnel", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Role", "Role")
                        .WithMany("Personnel")
                        .HasForeignKey("RoleIDRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Product", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Size_Product", "Size_Product")
                        .WithMany("Products")
                        .HasForeignKey("IDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Reviews", null)
                        .WithMany("Products")
                        .HasForeignKey("ReviewsIDReviews");

                    b.Navigation("Size_Product");
                });

            modelBuilder.Entity("BillDetailProduct", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.BillDetail", null)
                        .WithMany()
                        .HasForeignKey("BillDetailsIDBillDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsIDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryDetailProduct", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.CategoryDetail", null)
                        .WithMany()
                        .HasForeignKey("CategoryDetailIDCategoryDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsIDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientFavorites_List", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsIDClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Favorites_List", null)
                        .WithMany()
                        .HasForeignKey("FavoritesIDFavorites_List")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientImages", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientIDClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Images", null)
                        .WithMany()
                        .HasForeignKey("ImagesIDImages")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientReviews", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientIDClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Reviews", null)
                        .WithMany()
                        .HasForeignKey("ReviewsIDReviews")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Color_ProductProduct", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Color_Product", null)
                        .WithMany()
                        .HasForeignKey("Color_ProductIDColor_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductIDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComboCoupons", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Combo", null)
                        .WithMany()
                        .HasForeignKey("CombosIDCombo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Coupons", null)
                        .WithMany()
                        .HasForeignKey("CouponsIDCoupons")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComboDetailProduct", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.ComboDetail", null)
                        .WithMany()
                        .HasForeignKey("ComboDetailIDComboDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductIDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CouponsProduct", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Coupons", null)
                        .WithMany()
                        .HasForeignKey("CouponsIDCoupons")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsIDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ImagesPersonnel", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Images", null)
                        .WithMany()
                        .HasForeignKey("ImagesIDImages")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Personnel", null)
                        .WithMany()
                        .HasForeignKey("PersonnelIDPersonnel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ImagesProduct", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Images", null)
                        .WithMany()
                        .HasForeignKey("ImagesIDImages")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsIDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Material_ProductProduct", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Material_Product", null)
                        .WithMany()
                        .HasForeignKey("Material_ProductIDMaterial_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsIDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrdelDetailProduct", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.OrdelDetail", null)
                        .WithMany()
                        .HasForeignKey("OrdelDetailIDOrdeltDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsIDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Producer_ProductProduct", b =>
                {
                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Producer_Product", null)
                        .WithMany()
                        .HasForeignKey("Producer_ProductIDProducer_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assgiment_CSharp5._1_DataProcessing.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsIDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Address", b =>
                {
                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Bill", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Category", b =>
                {
                    b.Navigation("CategoryDetail");

                    b.Navigation("Combos");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Client", b =>
                {
                    b.Navigation("Bill");

                    b.Navigation("Cart");

                    b.Navigation("Membership_Card");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Combo", b =>
                {
                    b.Navigation("ComboDetail");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Coupons_Partner", b =>
                {
                    b.Navigation("Partner")
                        .IsRequired();
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Express_Delivery", b =>
                {
                    b.Navigation("Client");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Membership_Card", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Membership_Level", b =>
                {
                    b.Navigation("MembershipCards");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Ordel", b =>
                {
                    b.Navigation("OrdelDetails");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.OrdelDetail", b =>
                {
                    b.Navigation("Combos");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Payments", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Reviews", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Role", b =>
                {
                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("Assgiment_CSharp5._1_DataProcessing.Models.Size_Product", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
